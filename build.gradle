/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'net.researchgate.release' version '2.5.0'
    id "nebula.ospackage" version "4.5.1"
    id "com.github.sherter.google-java-format" version "0.6"
    id 'com.github.ben-manes.versions' version '0.13.0'
    id 'org.springframework.boot' version '1.5.8.RELEASE'
}

apply plugin: 'java'
apply plugin: 'docker'
apply plugin: 'idea'
apply plugin: 'eclipse'


apply from: 'gradle/gradle/git.helpers.gradle'
apply from: 'gradle/gradle/command.line.helper.gradle'

ext {
    //------------------------------------------------//
    //------------------------------------------------//
    /**
     * Application Related Version
     */
    applicationVersion = version

    applicationRelease = isApplicationRelease()
    applicationDate = new Date()
    applicationRevision = getRevision()

    applicationVersionSnapshot = (!applicationRelease) ? ".${asUTC(applicationDate, 'yyyyMMdd')}.git${applicationRevision}" : ""
    applicationVersionFull = "${applicationVersion}${applicationVersionSnapshot}"

    //------------------------------------------------//
    /**
     * gradle Related Vars
     */
    mainClass = 'org.openbaton.vnfm.generic.GenericVNFM'
    //------------------------------------------------//
    //------------------------------------------------//
    /**
     * Junit Version
     */
    junitVersion = "4.12"
}



apply from: 'gradle/gradle/application.java.gradle'
apply from: 'gradle/gradle/git.release.gradle'

apply from: 'gradle/gradle/packaging.vnfm-generic.debian.gradle'
apply from: 'gradle/gradle/packaging.vnfm-generic.docker.gradle'
apply from: 'gradle/gradle/packaging.innosetup.gradle'
apply from: 'gradle/gradle/distribution.gradle'
apply from: 'gradle/gradle/brew.formula.creator.gradle'

mainClassName = mainClass


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/releases/'
    }
}

allprojects {

    sourceSets {
        main {
            java      { srcDir 'src/main/java'}
            resources { srcDir 'src/main/resources'}
        }

        test {
            java      { srcDir 'src/test/java'}
            resources { srcDir 'src/test/resources'}
        }

        integration {
            java      { srcDir 'src/test/integration/java' }
            resources { srcDir 'src/test/resources'}
            compileClasspath += sourceSets.test.compileClasspath
            runtimeClasspath += sourceSets.test.runtimeClasspath
            output.classesDir = sourceSets.test.output.classesDir
        }

    }

    dependencies {
        integrationCompile sourceSets.test.output
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

dependencies {
    compile 'org.openbaton:vnfm-sdk-amqp:5.1.3-SNAPSHOT'
    compile("org.springframework.boot:spring-boot-starter-web:1.5.6.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-tomcat:1.5.6.RELEASE")
}

// Force code formatting
compileJava.dependsOn tasks.googleJavaFormat
